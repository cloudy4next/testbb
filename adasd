[1mdiff --git a/app/Http/Controllers/Admin/ActivityController.php b/app/Http/Controllers/Admin/ActivityController.php[m
[1mindex 6ff29c0..14e6a7e 100644[m
[1m--- a/app/Http/Controllers/Admin/ActivityController.php[m
[1m+++ b/app/Http/Controllers/Admin/ActivityController.php[m
[36m@@ -126,7 +126,6 @@[m [mclass ActivityController extends Controller[m
         $notifications = auth()->user()->unreadNotifications;[m
         return view('shownotifications', compact('notifications'));[m
     }[m
[31m-    // resources\views\shownotifications.blade.php[m
     public function markNotification(Request $request)[m
     {[m
         auth()->user()[m
[1mdiff --git a/app/Http/Controllers/Admin/PageCrudController.php b/app/Http/Controllers/Admin/PageCrudController.php[m
[1mindex 63aed5c..9f8a839 100644[m
[1m--- a/app/Http/Controllers/Admin/PageCrudController.php[m
[1m+++ b/app/Http/Controllers/Admin/PageCrudController.php[m
[36m@@ -26,6 +26,8 @@[m [muse File;[m
  */[m
 class PageCrudController extends CrudController[m
 {[m
[32m+[m[32m    public  $module = 'Page Title';[m
[32m+[m
     use CreateOperation;[m
     use ListOperation;[m
     use ShowOperation;[m
[36m@@ -120,8 +122,12 @@[m [mclass PageCrudController extends CrudController[m
         $page->image = $fileName ?? NULL;[m
         $page->save();[m
 [m
[32m+[m[32m        //Notification start[m
[32m+[m[32m        $type = 'Created';[m
         $notification = User::first();[m
[31m-        $notification->notify(new NewUserRegisterNotification($page));[m
[32m+[m[32m        $notification->notify(new NewUserRegisterNotification($page, $type, $this->module));[m
[32m+[m[32m        //notification end[m
[32m+[m
         \Alert::success('page successfully created!')->flash();[m
 [m
         return redirect('admin/page');[m
[36m@@ -164,6 +170,11 @@[m [mclass PageCrudController extends CrudController[m
 [m
         $page->save();[m
 [m
[32m+[m[32m        //Notification start[m
[32m+[m[32m        $type = 'Updated';[m
[32m+[m[32m        $notification = User::first();[m
[32m+[m[32m        $notification->notify(new NewUserRegisterNotification($page, $type, $this->module));[m
[32m+[m[32m        //notification end[m
         \Alert::success('page successfully updated!')->flash();[m
 [m
         return redirect()->back()->withInput();[m
[1mdiff --git a/app/Http/Controllers/Admin/ProjectCrudController.php b/app/Http/Controllers/Admin/ProjectCrudController.php[m
[1mindex 59a3c06..48ba91c 100644[m
[1m--- a/app/Http/Controllers/Admin/ProjectCrudController.php[m
[1m+++ b/app/Http/Controllers/Admin/ProjectCrudController.php[m
[36m@@ -8,8 +8,10 @@[m [muse Backpack\CRUD\app\Library\CrudPanel\CrudPanelFacade as CRUD;[m
 use App\Models\Project;[m
 use App\Models\Category;[m
 use App\Models\Funded;[m
[32m+[m[32muse App\Models\User;[m
 use Carbon\Carbon;[m
 use File;[m
[32m+[m[32muse App\Notifications\NewUserRegisterNotification;[m
 [m
 /**[m
  * Class ProjectCrudController[m
[36m@@ -18,6 +20,7 @@[m [muse File;[m
  */[m
 class ProjectCrudController extends CrudController[m
 {[m
[32m+[m[32m    public $module = 'Project Title';[m
     use \Backpack\CRUD\app\Http\Controllers\Operations\ListOperation;[m
     use \Backpack\CRUD\app\Http\Controllers\Operations\CreateOperation;[m
     use \Backpack\CRUD\app\Http\Controllers\Operations\UpdateOperation;[m
[36m@@ -40,19 +43,19 @@[m [mclass ProjectCrudController extends CrudController[m
     protected function setupListOperation()[m
     {[m
 [m
[31m-        $this->crud->denyAccess(['show','create', ]);[m
[32m+[m[32m        $this->crud->denyAccess(['show', 'create',]);[m
 [m
         $this->crud->enableExportButtons();[m
 [m
[31m-        if(backpack_user()->hasPermissionTo('Project store')) {[m
[32m+[m[32m        if (backpack_user()->hasPermissionTo('Project store')) {[m
             $this->crud->allowAccess(['create']);[m
         }[m
 [m
[31m-        if(!(backpack_user()->hasPermissionTo('Project delete'))) {[m
[32m+[m[32m        if (!(backpack_user()->hasPermissionTo('Project delete'))) {[m
             $this->crud->denyAccess(['delete']);[m
         }[m
 [m
[31m-        if(!(backpack_user()->hasPermissionTo('Project edit'))) {[m
[32m+[m[32m        if (!(backpack_user()->hasPermissionTo('Project edit'))) {[m
             $this->crud->denyAccess(['update']);[m
         }[m
 [m
[36m@@ -63,29 +66,29 @@[m [mclass ProjectCrudController extends CrudController[m
             'type' => 'row_number',[m
             'label' => '#',[m
             'orderable' => false,[m
[31m-            ])->makeFirstColumn();[m
[32m+[m[32m        ])->makeFirstColumn();[m
 [m
         CRUD::column('title');[m
 [m
         $this->crud->addColumn([[m
             'name' => 'category_id',[m
             'label' => 'Category',[m
[31m-            ]);[m
[32m+[m[32m        ]);[m
 [m
         $this->crud->addColumn([[m
             'name' => 'funded_id',[m
             'label' => 'Funded By',[m
[31m-            ]);[m
[32m+[m[32m        ]);[m
 [m
         $this->crud->addColumn([[m
             'name' => 'user_id',[m
             'label' => 'Publish By',[m
[31m-            ]);[m
[32m+[m[32m        ]);[m
 [m
         $this->crud->addColumn([[m
             'name' => 'created_at',[m
             'label' => 'Date',[m
[31m-            ]);[m
[32m+[m[32m        ]);[m
     }[m
 [m
     public function create()[m
[36m@@ -94,13 +97,13 @@[m [mclass ProjectCrudController extends CrudController[m
         $funded = Funded::pluck('name', 'id');[m
 [m
         return view('admin.project.create')[m
[31m-        ->withcategory($category)->withfunded($funded);[m
[32m+[m[32m            ->withcategory($category)->withfunded($funded);[m
     }[m
 [m
     public function store(projectRequest $request)[m
     {[m
         $attachments = $request->image;[m
[31m-        if($attachments != NULL){[m
[32m+[m[32m        if ($attachments != NULL) {[m
             $destinationPath = public_path() . "/uploads/project";[m
             $name = $attachments->getClientOriginalName();[m
             $fileName = time() . '_' . $name;[m
[36m@@ -118,6 +121,12 @@[m [mclass ProjectCrudController extends CrudController[m
         $project->image = $fileName ?? NULL;[m
         $project->save();[m
 [m
[32m+[m[32m        //Notification start[m
[32m+[m[32m        $type = 'Created';[m
[32m+[m[32m        $notification = User::first();[m
[32m+[m[32m        $notification->notify(new NewUserRegisterNotification($project, $type, $this->module));[m
[32m+[m[32m        //notification end[m
[32m+[m
         \Alert::success('project successfully created!')->flash();[m
 [m
         return redirect('admin/project');[m
[36m@@ -130,8 +139,8 @@[m [mclass ProjectCrudController extends CrudController[m
         $funded = Funded::pluck('name', 'id');[m
 [m
         return view('admin.project.edit')[m
[31m-        ->withcategory($category)[m
[31m-        ->withData($data)->withfunded($funded);[m
[32m+[m[32m            ->withcategory($category)[m
[32m+[m[32m            ->withData($data)->withfunded($funded);[m
     }[m
 [m
     public function update(projectRequest $request, $id)[m
[36m@@ -140,11 +149,11 @@[m [mclass ProjectCrudController extends CrudController[m
         $data = Project::where('id', '=', $id)->first();[m
 [m
         if (File::exists(public_path('uploads/project/' . $data->image))) {[m
[31m-        File::delete(public_path('uploads/project/' . $data->image));[m
[32m+[m[32m            File::delete(public_path('uploads/project/' . $data->image));[m
         }[m
 [m
         $attachments = $request->image;[m
[31m-        if($attachments != NULL){[m
[32m+[m[32m        if ($attachments != NULL) {[m
             $destinationPath = public_path() . "/uploads/project";[m
             $name = $attachments->getClientOriginalName();[m
             $fileName = time() . '_' . $name;[m
[36m@@ -164,9 +173,13 @@[m [mclass ProjectCrudController extends CrudController[m
 [m
         $project->save();[m
 [m
[32m+[m[32m        //Notification start[m
[32m+[m[32m        $type = 'Updated';[m
[32m+[m[32m        $notification = User::first();[m
[32m+[m[32m        $notification->notify(new NewUserRegisterNotification($project, $type, $this->module));[m
[32m+[m[32m        //notification end[m
         \Alert::success('project successfully updated!')->flash();[m
 [m
         return redirect()->back()->withInput();[m
     }[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/Notifications/NewUserRegisterNotification.php b/app/Notifications/NewUserRegisterNotification.php[m
[1mindex ecd10f3..b81c1e8 100644[m
[1m--- a/app/Notifications/NewUserRegisterNotification.php[m
[1m+++ b/app/Notifications/NewUserRegisterNotification.php[m
[36m@@ -6,20 +6,26 @@[m [muse Illuminate\Bus\Queueable;[m
 use Illuminate\Contracts\Queue\ShouldQueue;[m
 use Illuminate\Notifications\Messages\MailMessage;[m
 use Illuminate\Notifications\Notification;[m
[32m+[m[32muse App\Models\User;[m
 [m
 class NewUserRegisterNotification extends Notification[m
 {[m
     use Queueable;[m
     public $data;[m
[32m+[m[32m    public $type;[m
[32m+[m[32m    public $module;[m
[32m+[m
     /**[m
      * Create a new notification instance.[m
      *[m
      * @return void[m
      */[m
[31m-    public function __construct($data)[m
[32m+[m[32m    public function __construct($data, $type, $module)[m
     {[m
         //[m
         $this->data = $data;[m
[32m+[m[32m        $this->type = $type;[m
[32m+[m[32m        $this->module = $module;[m
     }[m
 [m
     /**[m
[36m@@ -55,8 +61,13 @@[m [mclass NewUserRegisterNotification extends Notification[m
      */[m
     public function toArray($notifiable)[m
     {[m
[32m+[m[32m        $userName = User::where('id', $this->data->user_id)->pluck('name');[m
[32m+[m[32m        // dd($userName[0]);[m
         return [[m
             'title' => $this->data->title,[m
[32m+[m[32m            'module' => $this->module,[m
[32m+[m[32m            'type' => $this->type,[m
[32m+[m[32m            'userName' => $userName[0],[m
         ];[m
     }[m
 }[m
[1mdiff --git a/app/Notifications/PageNotification.php b/app/Notifications/PageNotification.php[m
[1mdeleted file mode 100644[m
[1mindex 7443e49..0000000[m
[1m--- a/app/Notifications/PageNotification.php[m
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-namespace App\Notifications;[m
[31m-[m
[31m-use Illuminate\Bus\Queueable;[m
[31m-use Illuminate\Contracts\Queue\ShouldQueue;[m
[31m-use Illuminate\Notifications\Messages\MailMessage;[m
[31m-use Illuminate\Notifications\Notification;[m
[31m-[m
[31m-class PageNotification extends Notification[m
[31m-{[m
[31m-    use Queueable;[m
[31m-    public $data;[m
[31m-    /**[m
[31m-     * Create a new notification instance.[m
[31m-     *[m
[31m-     * @return void[m
[31m-     */[m
[31m-    public function __construct($data)[m
[31m-    {[m
[31m-        //[m
[31m-        $this->data = $data;[m
[31m-        // $this->user = $user;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Get the notification's delivery channels.[m
[31m-     *[m
[31m-     * @param  mixed  $notifiable[m
[31m-     * @return array[m
[31m-     */[m
[31m-    public function via($notifiable)[m
[31m-    {[m
[31m-        return ['database'];[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Get the mail representation of the notification.[m
[31m-     *[m
[31m-     * @param  mixed  $notifiable[m
[31m-     * @return \Illuminate\Notifications\Messages\MailMessage[m
[31m-     */[m
[31m-    public function toMail($notifiable)[m
[31m-    {[m
[31m-        return (new MailMessage)[m
[31m-            ->line('The introduction to the notification.')[m
[31m-            ->action('Notification Action', url('/'))[m
[31m-            ->line('Thank you for using our application!');[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Get the array representation of the notification.[m
[31m-     *[m
[31m-     * @param  mixed  $notifiable[m
[31m-     * @return array[m
[31m-     */[m
[31m-    public function toArray($notifiable)[m
[31m-    {[m
[31m-        return [[m
[31m-            'title' => $this->data->title,[m
[31m-        ];[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/resources/views/admin/project/create.blade.php b/resources/views/admin/project/create.blade.php[m
[1mindex 3145e80..a9926e1 100644[m
[1m--- a/resources/views/admin/project/create.blade.php[m
[1m+++ b/resources/views/admin/project/create.blade.php[m
[36m@@ -166,7 +166,7 @@[m
 [m
             $('.funded').select2({[m
                 theme: "bootstrap",[m
[31m-                placeholder: "Select status"[m
[32m+[m[32m                placeholder: "Select Funded By"[m
             });[m
         });[m
     </script>[m
[1mdiff --git a/resources/views/shownotifications.blade.php b/resources/views/shownotifications.blade.php[m
[1mindex 6fe7972..13b43eb 100644[m
[1m--- a/resources/views/shownotifications.blade.php[m
[1m+++ b/resources/views/shownotifications.blade.php[m
[36m@@ -13,9 +13,10 @@[m
         @foreach ($notifications as $notification)[m
             <div class="card bg-light mb-3" style="max-width: 100%; position:center;" id="noty">[m
                 {{-- <h5 class="card-title">Special title treatment</h5> --}}[m
[31m-                <p class="card-text text-center"><b> {{ $notification->data['title'] }} </b>&nbsp;[m
[31m-                    has just registered.[m
[31m-                    [{{ date('j \\ F Y, g:i A', strtotime($notification->created_at)) }}]</p>[m
[32m+[m[32m                <p class="card-text text-center"><b> {{ $notification->data['module'] }} - {{ $notification->data['title'] }}[m
[32m+[m[32m                    </b>[m
[32m+[m[32m                    has just <b>{{ $notification->data['type'] }}</b> by <b>{{ $notification->data['userName'] }}</b>[m
[32m+[m[32m                    at {{ date('j \\ F Y, g:i A', strtotime($notification->created_at)) }}.</p>[m
                 <a href="#" class="btn btn-secondary btn-lg active mark-as-read" role="button" aria-pressed="true"[m
                     data-id="{{ $notification->id }}">Mark as Read</a>[m
             </div>[m
